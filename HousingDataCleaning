
/* Standardize Date Format */

SELECT SaleDate, CONVERT(Date.Saledate)
FROM PortfolioProject.dbo.NashvilleHousing

UPDATE NashvilleHousing
SET SaleDate = CONVERT(Date.Saledate)


/* Populate Property Address Data */

Select *
From PortfolioProject.dbo.NashvilleHousing
/*Where PropertyAddress is null*/
order by ParcelID

Select a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, ISNULL(a.PropertyAddress, b.PropertyAddress)
From PortfolioProject.dbo.NashvilleHousing a
JOIN PortfolioProject.dbo.NashvilleHousing b
    on a.ParcelID = b.ParcelID
    AND a.[UniqueID] <> b.[UniqueID]
WHERE a.PropertyAddress is null

UPDATE a
SET PropertyAddress = ISNULL(a.PropertyAddress, b.PropertyAddress)
From PortfolioProject.dbo.NashvilleHousing a
JOIN PortfolioProject.dbo.NashvilleHousing b
    on a.ParcelID = b.ParcelID
    AND a.[UniqueID] <> b.[UniqueID]
WHERE a.PropertyAddress is null


/* Breaking out Address into Individual Columns (Address, City, State) */

SELECT PropertyAddress
FROM PortfolioProject.dbo.NashvilleHousing

SELECT 
Substring(PropertyAddress, 1, CHARINDEX(',', PropertyAddress)-1) as Address,
Substring(PropertyAddress, CHARINDEX(',', PropertyAddress)+1, LEN(PropertyAddress)) as Address
FROM PortfolioProject.dbo.NashvilleHousing

ALTER TABLE NashvilleHousing
ADD PropertySplitAddress Nvarchar(255);

ALTER TABLE NashvilleHousing
Add PropertySplitCity Nvarchar(255);

UPDATE NashvilleHousing
SET PropertySplitAddress = Substring(PropertyAddress, 1, CHARINDEX(',', PropertyAddress)-1)

UPDATE NashvilleHousing
SET PropertySplitCity = Substring(PropertyAddress, CHARINDEX(',', PropertyAddress)+1, LEN(PropertyAddress))

SELECT 
Parsename(REPLACE(OwnerAddress, ',', '.'), 3),
Parsename(REPLACE(OwnerAddress, ',', '.'), 2),
Parsename(REPLACE(OwnerAddress, ',', '.'), 1)
FROM PortfolioProject.dbo.NashvilleHousing

ALTER TABLE NashvilleHousing
ADD OwnerSplitAddress Nvarchar(255);

ALTER TABLE NashvilleHousing
Add OwnerSplitCity Nvarchar(255);

ALTER TABLE NashvilleHousing
ADD OwnerSplitState Nvarchar(255);

UPDATE NashvilleHousing
SET OwnerSplitAddress = Parsename(REPLACE(OwnerAddress, ',', '.'), 3)

UPDATE NashvilleHousing
SET OwnerSplitCity = Parsename(REPLACE(OwnerAddress, ',', '.'), 2)

UPDATE NashvilleHousing
SET OwnerSplitState = Parsename(REPLACE(OwnerAddress, ',', '.'), 1)

/* Change Y and N to Yes and No In "Sold as Vacant" Field */

Select Distinct(SoldasVacant), COUNT(SoldasVacant)
FROM PortfolioProject.dbo.NashvilleHousing
Group by SoldasVacant
Order by 2

Select SoldasVacant,
CASE when SoldasVacant = 'Y' THEN 'Yes'
    When SoldasVacant = 'N' THEN 'No'
    Else SoldasVacant
    End
from PortfolioProject.dbo.NashvilleHousing

Update NashvilleHousing
Set SoldasVacant = CASE when SoldasVacant = 'Y' THEN 'Yes'
    When SoldasVacant = 'N' THEN 'No'
    Else SoldasVacant
    End


/* Remove Duplicates */

WITH RowNumCTE as(
SELECT *, 
    ROW_NUMBER() over (
        Partition by ParcelID, 
                    PropertyAddress, 
                    SalePrice,
                    SaleDate,
                    LegalReference
                    Order by UniqueID
    ) row_num
FROM PortfolioProject.dbo.NashvilleHousing
/* Order by ParcelID */
)
DELETE
From RowNumCTE
Where Row_Num > 1

/* Delete Unused Columns */

ALTER Table PortfolioProject.dbo.NashvilleHousing
DROP COLUMN OwnerAddress, TaxDistrict, PropertyAddress

SELECT *
FROM PortfolioProject.dbo.NashvilleHousing